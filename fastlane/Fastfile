opt_out_usage
default_platform :ios
skip_docs

platform :ios do

  desc "Lints the project"
  lane :lint do
    sh 'cd ../ && ./Pods/SwiftLint/swiftlint'
  end

  desc "Ensures that SwiftyRSA can be integrated with Carthage"
  lane :test_carthage do
    commit = last_git_commit()[:commit_hash]
    git_repo_path = File.expand_path('..', File.dirname(__FILE__))
    sh "echo 'git \"file://#{git_repo_path}\" \"#{commit}\"' > ../CarthageIntegrationTest/Cartfile"
    carthage(project_directory: './CarthageIntegrationTest')
    xcodebuild(project: './CarthageIntegrationTest/CarthageIntegrationTest.xcodeproj')
  end

  desc "Runs all the tests"
  lane :test do
    
    swift_versions = ['4.0']
    
    for swift_version in swift_versions do
      # iOS
      scan(
          scheme: 'SwiftyRSA iOS',
          sdk: 'iphonesimulator11.0',
          custom_report_file_name: 'iOS.xml',
          xcargs: "SWIFT_VERSION='#{swift_version}'",
          devices: [
              #'iPhone 6 (8.4)',
              #'iPhone 6 (9.0)',
              #'iPhone 6 (10.0)',
              'iPhone 6 (11.0)'
          ]
      )

      # tvOS
      scan(
          scheme: 'SwiftyRSA tvOS',
          sdk: 'appletvsimulator11.0',
          custom_report_file_name: 'tvOS.xml',
          xcargs: "SWIFT_VERSION='#{swift_version}'",
          devices: [
              #'Apple TV 1080p (10.0)',
              'Apple TV 1080p (11.0)',
          ]
      )

      # watchOS (smoke test)
      xcodebuild(
          scheme: 'SwiftyRSA watchOS',
          sdk: 'watchsimulator4.0',
          configuration: 'Debug',
          xcargs: "SWIFT_VERSION='#{swift_version}'"
      )
    end
  end
end
